print("++++++++++++变量作用域+++++++++++")
'''
Python提供了三个工具函数来获取指定范围内的"变量字典"
globals():该函数返回全局范围内所有变量组成的"变量字典"
locals():该函数返回当前局部范围内所有变量组成的"变量字典"
vars(object):获取在指定对象范围内所有变量组成的"变量字典".如果不传入object参数，globals()和locals()的作用完全相同。
--globals()总是获取当前局部范围内所有变量组成的"变量字典",因此,如果在全局范围内(在函数之外)调用locals()函数,同样会获取全局范围
内所有变量组成的"变量字典"
-使用locals()和globals()获取的"变量字典"只应该被访问,不应该被修改.但实际上，都可以被修改，而这种修改会真正改变全局变量本身;但通过
locals()获取的局部范围内的"变量字典",即使对它修改也不会影响局部变量
'''
def test5():
    age=20
    print("直接访问age局部变量:",age)
    print("访问局部变量范围内数组:",locals())
    print("通过函数局部范围内的'变量数组改变age变量的值'：",locals()['age'])
    #通过locals()函数局部变量范围内的"变量数组"改变age变量的值
    locals()['age']=12

    print("访问age变量:",age)
    #通过globals()函数修改x的全部变量
    globals()['x']=19

test5()
x=5
y=20
print(locals())
print(locals())